---
import type { CollectionEntry } from "astro:content";
import type { AstroComponentFactory } from "astro/runtime/server/index.js";
import SpeakerImage from "./SpeakerImage.astro";

export interface Props {
  for: CollectionEntry<"speakers">;
  randomHover?: boolean;
  class?: string;
  level?: "2" | "3";
}

const { for: speaker, level = "2" } = Astro.props;

const Tag = `h${level}` as unknown as AstroComponentFactory;

const isSpeaker = !speaker.data.type || speaker.data.type === "speaker";
const isKeynote = speaker.data.type === "keynote";
const isHost = speaker.data.type === "mc"

const { Content } = await speaker.render();
---

<a href={`/speakers/${speaker.slug}`} class="group">
  <article class="@container h-full dark:bg-slate-950 pr-2 @md:pr-8">
    <div class="relative dark:bg-slate-950 @md:grid gap-4 grid-cols-3 h-full">
    <SpeakerImage for={speaker} />
      <div class="flex flex-col col-span-2 p-4 @md:p-0">
        {
          isSpeaker && (
            <div class="flex flex-col h-full space-y-4 @md:py-2 justify-between">
              <Tag class="text-xl @md:sm:text-2xl font-mono text-teal-500 dark:text-teal-300">
                {speaker.data.talk}
              </Tag>
              <div class="text-sm text-slate-400 text-right">
                <p>
                  by <em class="italic dark:text-teal-300 text-teal-600">{speaker.data.name}</em>
                </p>
                <p>{speaker.data.job}</p>
              </div>
            </div>
          )
        }
        {
          isKeynote && (
            <div class="flex flex-col h-full @md:py-2 justify-between">
              <div class="space-y-4 ">
                <Tag class="text-xl sm:text-2xl md:text-3xl lg:text-5xl font-bold font-mono">
                  {speaker.data.talk}
                </Tag>
                <div class="text-sm text-slate-400">
                  <p>
                    by <em class="italic">{speaker.data.name}</em>
                  </p>
                  <p>{speaker.data.job}</p>
                </div>
                <div class="lg:text-xl">
                  <Content />
                </div>
              </div>

              <p class="text-right text-teal-300 font-mono group-hover:underline" aria-hidden="true">gf &rarr;</p>
            </div>
          )
        }
        {
          isHost && (
            <div class="text-sm md:text-md leading-relaxed text-slate-500 dark:text-slate-400 @md:pt-2 @md:pb-4 flex flex-col justify-between h-full">
              <div class="">
                <Tag class="text-teal-500 tracking-wider dark:text-teal-300 text-xl sm:text-2xl font-bold font-mono mb-4">
                  {speaker.data.name}
                </Tag>

                <Content />
              </div>

              <p class="text-right text-teal-300 font-mono group-hover:underline" aria-hidden="true">gf &rarr;</p>
            </div>
          )
        }
      </div>
    </div>
  </article>
</a>
