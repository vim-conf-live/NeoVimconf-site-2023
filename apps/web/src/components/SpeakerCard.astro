---
import type { CollectionEntry } from "astro:content";
import type { AstroComponentFactory } from "astro/runtime/server/index.js";
import { Image } from "astro:assets";
export interface Props {
  for: CollectionEntry<"speakers">;
  randomHover?: boolean;
  class?: string;
  level?: "2" | "3";
}

const { for: speaker, level = "2" } = Astro.props;

const Tag = `h${level}` as unknown as AstroComponentFactory;

const { Content } = await speaker.render();
---

<article class="@container h-full dark:bg-slate-950">
<div class="relative dark:bg-slate-950 @md:grid gap-4 grid-cols-3 h-full">
  <div
    class="
      bg-gradient-to-b
      from-teal-600
      to-emerald-600
      relative
      overflow-hidden
      before:absolute
      before:inset-0
      before:bg-gradient-to-br
      before:from-sky-400
      before:to-amber-400
      before:mix-blend-overlay
      before:z-10"
  >
    <Image
      src={speaker.data.image}
      alt={`Portrait of ${speaker.data.name}`}
      class="grayscale mix-blend-overlay object-cover h-full relative z-0"
    />
  </div>
  <div class="flex flex-col col-span-2 p-4 @md:p-0">
    {
      ["speaker"].includes(speaker.data.type) && (
        <div class="flex flex-col h-full space-y-4 @md:py-2 justify-between">
          <h2 class="text-md @md:lg:text-xl font-mono">
            {speaker.data.talk}
          </h2>
          <div class="text-sm text-slate-400 text-right">
            <p>
              by <em class="italic">{speaker.data.name}</em>
            </p>
            <p>{speaker.data.job}</p>
          </div>
        </div>
      )
    }
    {
      ["keynote"].includes(speaker.data.type) && (
        <div class="flex flex-col h-full space-y-4 @md:py-2">
          <Tag class="text-xl sm:text-2xl md:text-3xl lg:text-5xl font-bold font-mono">
            {speaker.data.talk}
          </Tag>
          <div class="text-sm text-slate-400">
            <p>
              by <em class="italic">{speaker.data.name}</em>
            </p>
            <p>{speaker.data.job}</p>
          </div>
          <div class="lg:text-xl">
            <Content />
          </div>
        </div>
      )
    }
    {
      ["mc"].includes(speaker.data.type) && (
        <div class="text-sm md:text-md leading-relaxed text-slate-500 dark:text-slate-400 @md:pt-2 @md:pb-4">
          <Tag class="text-slate-800 dark:text-slate-300 text-xl sm:text-2xl font-bold font-mono mb-4">
            {speaker.data.name}
          </Tag>
          <Content />
        </div>
      )
    }
  </div>
  </div>
</article>
