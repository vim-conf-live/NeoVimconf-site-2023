---
import { type SignUp, SignUpSchema } from '@/lib/attendee';
import App from '@/layouts/App.astro';
import ClickablePrimary from '@/components/ClickablePrimary.astro';
import { supabase } from '@/lib/auth';

export const prerender = false;

let errors: any = { email: null };
let formData: SignUp | null = null

if (Astro.request.method === "POST") {
    formData = Object.fromEntries(await Astro.request.formData()) as SignUp;
    const parsedFormData = SignUpSchema.safeParse(formData);

    if (parsedFormData.success) {
      await supabase.auth.signInWithOtp({ 
        email: parsedFormData.data.email,
        options: {
          emailRedirectTo: import.meta.env.PUBLIC_AUTH_REDIRECT_URL
        }
      })
      return Astro.redirect(`/register/success`)
    }

    errors = parsedFormData.error.formErrors.fieldErrors
}

const hasError = (field: string) => errors?.[field]?.length > 0;
---

<App title="Register">
  <article class="space-y-8">
    <div class="prose dark:prose-invert mx-auto">
      <h1 class="font-mono text-5xl font-bold">Sign up for NEOVIMCONF2023</h1>
      <p>
        Signing up helps us a lot to organize this event.
        We're super stoked that you're doing this!
        After submitting, you'll have to confirm you e-mail address, which only 
        need to have an indicator of interest and we certainly won't give it 
        away to third parties or send you further mails without consent.
      </p>

      <p>
        If you want to receive some promotional reminder emails right before this year's 
        event, and receive a headsup for next year's neovimconf via email, make
        sure to tick that second box. Of course you can always opt-out or opt-in later.
      </p>
    </div>

    <form method="POST" class="max-w-sm mx-auto space-y-4">
      <div class:list={[ "mx-auto", { "text-red-500": hasError("email") } ]}>
        <label for="email" class="text-sm font-mono p-1">E-Mail:</label>
        <input class="block w-full px-2 py-1 shadow-inner border rounded-xs" placeholder="smart-developer@example.com" id="email" type="text" name="email" value={formData?.email} required />
        {errors?.email && <p class="text-red-500 text-sm text-right">{errors.email.join(",")}</p>}
      </div>

      <div class:list={[ "mx-auto", { "text-red-500": hasError("email") } ]}>
        <label for="reminders" class="text-sm p-1 relative pl-5 block">
          <input type="checkbox" id="reminders" name="reminders" value="yes" class="absolute left-0 top-2" /> (optional) I'm okay with receiving promotional emails concerning neovimconf.
        </label>
      </div>

      <div class="text-right">
        <ClickablePrimary>sign up!</ClickablePrimary>
      </div>
    </form>

  </article>
</App>
