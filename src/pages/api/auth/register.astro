---
import RegisterForm from "@/components/RegisterForm.astro";
import App from "@/layouts/App.astro"
import { SignUpSchema, type SignUp } from "@/lib/attendee";
import { supabase } from "@/lib/auth";

export const prerender = false

let errors: any = { email: null };
let formData: SignUp | undefined;

if (Astro.request.method === "POST") {
    formData = Object.fromEntries(await Astro.request.formData()) as SignUp;
    const parsedFormData = SignUpSchema.safeParse(formData);

    if (parsedFormData.success) {
      await supabase.auth.signInWithOtp({ 
        email: parsedFormData.data.email,
        options: {
          emailRedirectTo: import.meta.env.PUBLIC_AUTH_REDIRECT_URL
        }
      })
      Astro.response.headers.set("HX-Location", "/register/success")
      Astro.response.status = 200
      return new Response(null, {
        status: 200,
        headers: {
          "HX-Redirect": "/register/success",
          Location: "/register/success" 
        }
      })
    }

    errors = parsedFormData.error.formErrors.fieldErrors
}

const hasErrors = Object.values(errors).some(Boolean)
---

<App title="Register">
  <article class="vise min-w-max">
    {hasErrors ? (
      <RegisterForm formData={formData} errors={errors} />
    ): (
      <p>Nice!</p>
    )}
  </article>
</App>
